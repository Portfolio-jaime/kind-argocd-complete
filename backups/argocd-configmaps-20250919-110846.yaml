apiVersion: v1
items:
- apiVersion: v1
  data:
    admin.enabled: "true"
    application.instanceLabelKey: argocd.argoproj.io/instance
    application.sync.impersonation.enabled: "false"
    exec.enabled: "false"
    resource.customizations.ignoreResourceUpdates.ConfigMap: |
      jqPathExpressions:
        # Ignore the cluster-autoscaler status
        - '.metadata.annotations."cluster-autoscaler.kubernetes.io/last-updated"'
        # Ignore the annotation of the legacy Leases election
        - '.metadata.annotations."control-plane.alpha.kubernetes.io/leader"'
    resource.customizations.ignoreResourceUpdates.Endpoints: |
      jsonPointers:
        - /metadata
        - /subsets
    resource.customizations.ignoreResourceUpdates.all: |
      jsonPointers:
        - /status
    resource.customizations.ignoreResourceUpdates.apps_ReplicaSet: |
      jqPathExpressions:
        - '.metadata.annotations."deployment.kubernetes.io/desired-replicas"'
        - '.metadata.annotations."deployment.kubernetes.io/max-replicas"'
        - '.metadata.annotations."rollout.argoproj.io/desired-replicas"'
    resource.customizations.ignoreResourceUpdates.argoproj.io_Application: |
      jqPathExpressions:
        - '.metadata.annotations."notified.notifications.argoproj.io"'
        - '.metadata.annotations."argocd.argoproj.io/refresh"'
        - '.metadata.annotations."argocd.argoproj.io/hydrate"'
        - '.operation'
    resource.customizations.ignoreResourceUpdates.argoproj.io_Rollout: |
      jqPathExpressions:
        - '.metadata.annotations."notified.notifications.argoproj.io"'
    resource.customizations.ignoreResourceUpdates.autoscaling_HorizontalPodAutoscaler: |
      jqPathExpressions:
        - '.metadata.annotations."autoscaling.alpha.kubernetes.io/behavior"'
        - '.metadata.annotations."autoscaling.alpha.kubernetes.io/conditions"'
        - '.metadata.annotations."autoscaling.alpha.kubernetes.io/metrics"'
        - '.metadata.annotations."autoscaling.alpha.kubernetes.io/current-metrics"'
    resource.customizations.ignoreResourceUpdates.discovery.k8s.io_EndpointSlice: |
      jsonPointers:
        - /metadata
        - /endpoints
        - /ports
    resource.exclusions: |
      ### Network resources created by the Kubernetes control plane and excluded to reduce the number of watched events and UI clutter
      - apiGroups:
        - ''
        - discovery.k8s.io
        kinds:
        - Endpoints
        - EndpointSlice
      ### Internal Kubernetes resources excluded reduce the number of watched events
      - apiGroups:
        - coordination.k8s.io
        kinds:
        - Lease
      ### Internal Kubernetes Authz/Authn resources excluded reduce the number of watched events
      - apiGroups:
        - authentication.k8s.io
        - authorization.k8s.io
        kinds:
        - SelfSubjectReview
        - TokenReview
        - LocalSubjectAccessReview
        - SelfSubjectAccessReview
        - SelfSubjectRulesReview
        - SubjectAccessReview
      ### Intermediate Certificate Request excluded reduce the number of watched events
      - apiGroups:
        - certificates.k8s.io
        kinds:
        - CertificateSigningRequest
      - apiGroups:
        - cert-manager.io
        kinds:
        - CertificateRequest
      ### Cilium internal resources excluded reduce the number of watched events and UI Clutter
      - apiGroups:
        - cilium.io
        kinds:
        - CiliumIdentity
        - CiliumEndpoint
        - CiliumEndpointSlice
      ### Kyverno intermediate and reporting resources excluded reduce the number of watched events and improve performance
      - apiGroups:
        - kyverno.io
        - reports.kyverno.io
        - wgpolicyk8s.io
        kinds:
        - PolicyReport
        - ClusterPolicyReport
        - EphemeralReport
        - ClusterEphemeralReport
        - AdmissionReport
        - ClusterAdmissionReport
        - BackgroundScanReport
        - ClusterBackgroundScanReport
        - UpdateRequest
    server.rbac.log.enforce.enable: "false"
    statusbadge.enabled: "false"
    timeout.hard.reconciliation: 0s
    timeout.reconciliation: 180s
    url: https://argocd.test.com
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-09-13T23:32:51Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-cm
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.1.5
      helm.sh/chart: argo-cd-8.3.7
    name: argocd-cm
    namespace: argocd
    resourceVersion: "18116"
    uid: 2993795b-ac17-4fd7-a951-d9d92c1e7b82
- apiVersion: v1
  data:
    application.namespaces: ""
    applicationsetcontroller.enable.leader.election: "false"
    applicationsetcontroller.enable.progressive.syncs: "false"
    applicationsetcontroller.log.format: text
    applicationsetcontroller.log.level: info
    applicationsetcontroller.namespaces: ""
    applicationsetcontroller.policy: sync
    commitserver.log.format: text
    commitserver.log.level: info
    controller.ignore.normalizer.jq.timeout: 1s
    controller.log.format: text
    controller.log.level: info
    controller.operation.processors: "10"
    controller.repo.server.timeout.seconds: "60"
    controller.self.heal.timeout.seconds: "5"
    controller.status.processors: "20"
    controller.sync.timeout.seconds: "0"
    dexserver.log.format: text
    dexserver.log.level: info
    hydrator.enabled: "false"
    notificationscontroller.log.format: text
    notificationscontroller.log.level: info
    otlp.address: ""
    redis.server: argocd-redis:6379
    repo.server: argocd-repo-server:8081
    reposerver.log.format: text
    reposerver.log.level: info
    reposerver.parallelism.limit: "0"
    server.basehref: /
    server.dex.server: https://argocd-dex-server:5556
    server.dex.server.strict.tls: "false"
    server.disable.auth: "false"
    server.enable.gzip: "true"
    server.enable.proxy.extension: "false"
    server.insecure: "false"
    server.log.format: text
    server.log.level: info
    server.repo.server.strict.tls: "false"
    server.rootpath: ""
    server.staticassets: /shared/app
    server.x.frame.options: sameorigin
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-09-13T23:32:51Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-cmd-params-cm
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.1.5
      helm.sh/chart: argo-cd-8.3.7
    name: argocd-cmd-params-cm
    namespace: argocd
    resourceVersion: "18118"
    uid: f75226f1-ccff-474c-be09-15c5dd29780e
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-09-13T23:32:51Z"
    labels:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-gpg-keys-cm
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.1.5
      helm.sh/chart: argo-cd-8.3.7
    name: argocd-gpg-keys-cm
    namespace: argocd
    resourceVersion: "18112"
    uid: 8075c905-4b69-4aed-adbd-19e41f9289fd
- apiVersion: v1
  data:
    context: |
      argocdUrl: https://argocd.test.com
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-09-13T23:32:51Z"
    labels:
      app.kubernetes.io/component: notifications-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-notifications-controller
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.1.5
      helm.sh/chart: argo-cd-8.3.7
    name: argocd-notifications-cm
    namespace: argocd
    resourceVersion: "18117"
    uid: 746a3ed0-2e4d-4982-ad6d-374f8fcccdda
- apiVersion: v1
  data:
    policy.csv: ""
    policy.default: ""
    policy.matchMode: glob
    scopes: '[groups]'
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-09-13T23:32:51Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-rbac-cm
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.1.5
      helm.sh/chart: argo-cd-8.3.7
    name: argocd-rbac-cm
    namespace: argocd
    resourceVersion: "18113"
    uid: 8358180e-3d6b-4a02-9cb3-8d5b2a68c1c3
- apiVersion: v1
  data:
    redis_liveness.sh: |
      response=$(
        redis-cli \
          -a "${REDIS_PASSWORD}" --no-auth-warning \
          -h localhost \
          -p 6379 \
          ping
      )
      if [ "$response" != "PONG" ] && [ "${response:0:7}" != "LOADING" ] ; then
        echo "$response"
        exit 1
      fi
      echo "response=$response"
    redis_readiness.sh: |
      response=$(
        redis-cli \
          -a "${REDIS_PASSWORD}" --no-auth-warning \
          -h localhost \
          -p 6379 \
          ping
      )
      if [ "$response" != "PONG" ] ; then
        echo "$response"
        exit 1
      fi
      echo "response=$response"
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-09-13T23:32:51Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.1.5
      helm.sh/chart: argo-cd-8.3.7
    name: argocd-redis-health-configmap
    namespace: argocd
    resourceVersion: "18119"
    uid: eda614b0-2c33-4136-b8f3-0ea1ba62be82
- apiVersion: v1
  data:
    ssh_known_hosts: |
      [ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
      [ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
      [ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
      bitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=
      bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO
      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=
      github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
      github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-09-13T23:32:51Z"
    labels:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-ssh-known-hosts-cm
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.1.5
      helm.sh/chart: argo-cd-8.3.7
    name: argocd-ssh-known-hosts-cm
    namespace: argocd
    resourceVersion: "18115"
    uid: 64fae4af-e8b7-4c87-a016-4ae686389396
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: argocd
      meta.helm.sh/release-namespace: argocd
    creationTimestamp: "2025-09-13T23:32:51Z"
    labels:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: argocd-tls-certs-cm
      app.kubernetes.io/part-of: argocd
      app.kubernetes.io/version: v3.1.5
      helm.sh/chart: argo-cd-8.3.7
    name: argocd-tls-certs-cm
    namespace: argocd
    resourceVersion: "18114"
    uid: 6f790001-3b9d-4241-ba6d-e8f2ca55885f
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIGHO1f3Oy9YowDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA5MTIyMTIxNDNaFw0zNTA5MTAyMTI2NDNaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDtF8T2WafByywlkLWKp8iDKy4/sO7sapbmCi8bf2jY7r9wpgAyCWEu+RBt
      /ogtDdCD3Q3Zmq58rIzNFg/X6nczzKHigfXYlJ/ZdL8SnzCn4qfIkUhbHBwdwYYh
      aZsZ0CSkiCFcoVb/hQSHNoKV5ZX+z3U66Tqv8czNH4zZddGZ8bdnlkaGyS8hCAut
      F92sd5zYEv9NKp9PbEvEJB5l4lxkQdwB4B97vRyL2ToH0UNx9yrlFt3qPKZ/yKJI
      /206mrnrbYS7SxolHBPWELufHKdHdvLoiXKJI0Wh62PTDqqnrMPj8s0sKRsa/jpz
      olyDmwrxA7fNFnDqZOXsi6aqN10tAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQr/g6KulUjWuXI2F3a7kDUwqT12DAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDKoKuV1kLf
      pKWWwGcvJHGWhIQ5OS6DMcet3dfCCDSq60XKt4+dibT0z/jiDnyMwINb96+AFxVM
      a2ZSIoTDcdhct6P0V8dBZxnx0F1b52qlwur/yJqSTMY8kR/VvH0r8vEhJcYTFRU+
      aMIUZaPGSFfkbQKlRrknf2Cq8n56Gn7p84BwiL0NgxbW9NAxxiRMHr9NR33d11dC
      C1y1wsKm10PQNptsDCu/M2JXkciDAmA1ZFnoX0apOafPFqywucgCH3jvubt5DpXf
      OBvXEppJWSa64IO7l5VxOjpSw+ZAKb/ubQpJ9q/oVenSviuyiGvNWANSvzFeceNQ
      HcoZvyzEGQw6
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-09-13T23:31:04Z"
    name: kube-root-ca.crt
    namespace: argocd
    resourceVersion: "17917"
    uid: 2519e68f-7f10-4180-b5ce-36d8db695c63
kind: List
metadata:
  resourceVersion: ""
